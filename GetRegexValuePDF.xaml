<Activity mc:Ignorable="sap sap2010" x:Class="GetRegexValuePDF" this:GetRegexValuePDF.in_FilePath="C:\Users\jtan15\OneDrive - Amgen\Tableau\Azure_DevOps.pdf" this:GetRegexValuePDF.in_RegexPattern1="(?=Principle 1).*(\w)" this:GetRegexValuePDF.in_RegexPattern2="(?=Principle 2).*(\w)" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PDFPassword" Type="InArgument(x:String)" />
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_Match1" Type="OutArgument(scg:IEnumerable(str:Match))" />
    <x:Property Name="out_Match2" Type="OutArgument(scg:IEnumerable(str:Match))" />
    <x:Property Name="in_RegexPattern1" Type="InArgument(x:String)" />
    <x:Property Name="in_RegexPattern2" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>720,996</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTextPDF__1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap2010:Annotation.AnnotationText="in_FilePath: This is the file to be processed, make sure to include the full path like the following example “C:\User\Username\Folder\File.pdf”&#xA;&#xA;in_PDFPassword: Enter text here if the PDF being read is password protected and leave empty if the PDF is not protected.&#xA;&#xA;in_RegexPattern: Enter in a regex expression to search the pdf for, if a match is found, it is returned.&#xA;&#xA;out_Match: Returns an IEnumerable&lt;Match&gt; for the user.&#xA;&#xA;To change a match to a string follow this format in an assign: &#xA;&#xA;yourString=outMatch(matchnumber).ToString&#xA;OR&#xA;yourString=outMatch(matchnumber).Groups(groupnumber).ToString&#xA;&#xA;Where matchnumber is the index of the match you wish to use and groupnumber is group you wish to include." DisplayName="GetRegexValuePDF" sap:VirtualizedContainerService.HintSize="634,931.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="FullText" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,125.333333333333</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,125.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,194.666666666667 300,245.333333333333</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Input Checker" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch DisplayName="Try Catch Regex Null" sap:VirtualizedContainerService.HintSize="522.666666666667,730" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <If Condition="[in_RegexPattern1 is Nothing]" DisplayName="If Regex is null" sap:VirtualizedContainerService.HintSize="484,244.666666666667" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Then>
                <Throw DisplayName="Throw Regex Pattern is null" Exception="[new NullReferenceException(&quot;in_RegexPattern must have a value.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Then>
            </If>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="488.666666666667,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:NullReferenceException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message Regex Null" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;in_RegexPattern cannot be null or empty.&quot;]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <TryCatch DisplayName="try Catch file path null" sap:VirtualizedContainerService.HintSize="522.666666666667,730" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <TryCatch.Try>
            <If Condition="[string.IsNullorEmpty(in_FilePath)]" DisplayName="If in_FilePath null" sap:VirtualizedContainerService.HintSize="484,244.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Throw DisplayName="Throw FilePath null" Exception="[New NullReferenceException(&quot;in_Text Must have a value.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </If.Then>
            </If>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="488.666666666667,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:NullReferenceException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message FilePath null" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;in_FilePath cannot be null&quot;]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <TryCatch DisplayName="Try Catch file is PDF" sap:VirtualizedContainerService.HintSize="522.666666666667,709.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_3">
          <TryCatch.Try>
            <If Condition="[Path.GetExtension(in_FilePath)=&quot;.pdf&quot;]" DisplayName="If File is PDF" sap:VirtualizedContainerService.HintSize="484,224" sap2010:WorkflowViewState.IdRef="If_14">
              <If.Else>
                <Throw DisplayName="Throw not PDF" Exception="[new Exception(&quot;File is not a pdf&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
              </If.Else>
            </If>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488.666666666667,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message Not PDF" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;in_FilePath is not a PDF file: &quot; +in_FilePath]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,245.333333333333</av:Point>
              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Read Text PDF" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch Read And Extract" sap:VirtualizedContainerService.HintSize="810.666666666667,2012" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <TryCatch.Try>
                <Sequence DisplayName="Read and extract" sap:VirtualizedContainerService.HintSize="772,1526.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="out_Match1" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="out_Match2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF into String" FileName="[in_FilePath]" sap:VirtualizedContainerService.HintSize="730,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Password="[in_PDFPassword]" Range="22-28" Text="[FullText]" />
                  <ui:Matches DisplayName="Find All Matches" sap:VirtualizedContainerService.HintSize="730,58.6666666666667" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[FullText]" IsBuilderTabModified="False" Pattern="[in_RegexPattern1]" RegexOption="IgnoreCase, Compiled" Result="[out_Match1]" />
                  <ui:Matches DisplayName="Find All Matches" sap:VirtualizedContainerService.HintSize="730,58.6666666666667" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[FullText]" IsBuilderTabModified="False" Pattern="[in_RegexPattern2]" RegexOption="IgnoreCase, Compiled" Result="[out_Match2]" />
                  <If Condition="[out_Match1.count&gt;0]" DisplayName="If Matches are found" sap:VirtualizedContainerService.HintSize="730,549.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="350,385.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="308,293.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[out_Match1]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="str:Match">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="str:Match" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="271.333333333333,154.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.333333333333,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[item.ToString]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message No matches" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Regex pattern: &quot; + in_RegexPattern1 + &quot; not found.&quot;]" />
                    </If.Else>
                  </If>
                  <If Condition="[out_Match2.count&gt;0]" DisplayName="If Matches are found" sap:VirtualizedContainerService.HintSize="730,549.333333333333" sap2010:WorkflowViewState.IdRef="If_15">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="350,385.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="308,293.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[out_Match2]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="str:Match">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="str:Match" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="271.333333333333,154.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.333333333333,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[item.ToString]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message No matches" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Regex pattern: &quot; + in_RegexPattern2 + &quot; not found.&quot;]" />
                    </If.Else>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="776.666666666667,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message Error" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;Error: &quot; + exception.Message]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
              <TryCatch.Finally>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Regex read completed&quot;]" />
              </TryCatch.Finally>
            </TryCatch>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>